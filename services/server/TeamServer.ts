import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { TeamCountCached, TeamFindFirstCached, TeamFindManyCached, TeamFindUniqueCached } from "@services/cached";

/**
 * # Team Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type TeamFindFirstProps<T extends Prisma.TeamFindFirstArgs> = Prisma.SelectSubset<T, Prisma.TeamFindFirstArgs>;
type TeamFindFirstResponse<T extends Prisma.TeamFindFirstArgs> = GetResult<
    Prisma.$TeamPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type TeamFindUniqueProps<T extends Prisma.TeamFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.TeamFindUniqueArgs>;
type TeamFindUniqueResponse<T extends Prisma.TeamFindUniqueArgs> = GetResult<
    Prisma.$TeamPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type TeamFindManyProps<T extends Prisma.TeamFindManyArgs> = Prisma.SelectSubset<T, Prisma.TeamFindManyArgs>;
type TeamFindManyResponse<T extends Prisma.TeamFindManyArgs> = GetResult<
    Prisma.$TeamPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type TeamCountProps<T extends Prisma.TeamCountArgs> = Prisma.SelectSubset<T, Prisma.TeamCountArgs>;
type TeamCountResponse<T extends Prisma.TeamCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.TeamCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Team Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const TeamFindFirstServer = async <T extends Prisma.TeamFindFirstArgs>(
    params: TeamFindFirstProps<T>,
): Promise<TeamFindFirstResponse<T>> => {
    return await TeamFindFirstCached(params);
};

/**
 * ## Team Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const TeamFindUniqueServer = async <T extends Prisma.TeamFindUniqueArgs>(
    params: TeamFindUniqueProps<T>,
): Promise<TeamFindUniqueResponse<T>> => {
    return await TeamFindUniqueCached(params);
};

/**
 * ## Team Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const TeamFindManyServer = async <T extends Prisma.TeamFindManyArgs>(
    params: TeamFindManyProps<T>,
): Promise<TeamFindManyResponse<T>> => {
    return await TeamFindManyCached(params);
};

/**
 * ## Team Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const TeamCountServer = async <T extends Prisma.TeamCountArgs>(
    params: TeamCountProps<T>,
): Promise<TeamCountResponse<T>> => {
    return await TeamCountCached(params);
};
