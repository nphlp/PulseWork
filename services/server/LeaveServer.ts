import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { LeaveCountCached, LeaveFindFirstCached, LeaveFindManyCached, LeaveFindUniqueCached } from "@services/cached";

/**
 * # Leave Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type LeaveFindFirstProps<T extends Prisma.LeaveFindFirstArgs> = Prisma.SelectSubset<T, Prisma.LeaveFindFirstArgs>;
type LeaveFindFirstResponse<T extends Prisma.LeaveFindFirstArgs> = GetResult<
    Prisma.$LeavePayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type LeaveFindUniqueProps<T extends Prisma.LeaveFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.LeaveFindUniqueArgs>;
type LeaveFindUniqueResponse<T extends Prisma.LeaveFindUniqueArgs> = GetResult<
    Prisma.$LeavePayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type LeaveFindManyProps<T extends Prisma.LeaveFindManyArgs> = Prisma.SelectSubset<T, Prisma.LeaveFindManyArgs>;
type LeaveFindManyResponse<T extends Prisma.LeaveFindManyArgs> = GetResult<
    Prisma.$LeavePayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type LeaveCountProps<T extends Prisma.LeaveCountArgs> = Prisma.SelectSubset<T, Prisma.LeaveCountArgs>;
type LeaveCountResponse<T extends Prisma.LeaveCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.LeaveCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Leave Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const LeaveFindFirstServer = async <T extends Prisma.LeaveFindFirstArgs>(
    params: LeaveFindFirstProps<T>,
): Promise<LeaveFindFirstResponse<T>> => {
    return await LeaveFindFirstCached(params);
};

/**
 * ## Leave Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const LeaveFindUniqueServer = async <T extends Prisma.LeaveFindUniqueArgs>(
    params: LeaveFindUniqueProps<T>,
): Promise<LeaveFindUniqueResponse<T>> => {
    return await LeaveFindUniqueCached(params);
};

/**
 * ## Leave Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const LeaveFindManyServer = async <T extends Prisma.LeaveFindManyArgs>(
    params: LeaveFindManyProps<T>,
): Promise<LeaveFindManyResponse<T>> => {
    return await LeaveFindManyCached(params);
};

/**
 * ## Leave Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const LeaveCountServer = async <T extends Prisma.LeaveCountArgs>(
    params: LeaveCountProps<T>,
): Promise<LeaveCountResponse<T>> => {
    return await LeaveCountCached(params);
};
