import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import {
    VerificationCountCached,
    VerificationFindFirstCached,
    VerificationFindManyCached,
    VerificationFindUniqueCached,
} from "@services/cached";

/**
 * # Verification Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type VerificationFindFirstProps<T extends Prisma.VerificationFindFirstArgs> = Prisma.SelectSubset<
    T,
    Prisma.VerificationFindFirstArgs
>;
type VerificationFindFirstResponse<T extends Prisma.VerificationFindFirstArgs> = GetResult<
    Prisma.$VerificationPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type VerificationFindUniqueProps<T extends Prisma.VerificationFindUniqueArgs> = Prisma.SelectSubset<
    T,
    Prisma.VerificationFindUniqueArgs
>;
type VerificationFindUniqueResponse<T extends Prisma.VerificationFindUniqueArgs> = GetResult<
    Prisma.$VerificationPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type VerificationFindManyProps<T extends Prisma.VerificationFindManyArgs> = Prisma.SelectSubset<
    T,
    Prisma.VerificationFindManyArgs
>;
type VerificationFindManyResponse<T extends Prisma.VerificationFindManyArgs> = GetResult<
    Prisma.$VerificationPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type VerificationCountProps<T extends Prisma.VerificationCountArgs> = Prisma.SelectSubset<
    T,
    Prisma.VerificationCountArgs
>;
type VerificationCountResponse<T extends Prisma.VerificationCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.VerificationCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Verification Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const VerificationFindFirstServer = async <T extends Prisma.VerificationFindFirstArgs>(
    params: VerificationFindFirstProps<T>,
): Promise<VerificationFindFirstResponse<T>> => {
    return await VerificationFindFirstCached(params);
};

/**
 * ## Verification Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const VerificationFindUniqueServer = async <T extends Prisma.VerificationFindUniqueArgs>(
    params: VerificationFindUniqueProps<T>,
): Promise<VerificationFindUniqueResponse<T>> => {
    return await VerificationFindUniqueCached(params);
};

/**
 * ## Verification Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const VerificationFindManyServer = async <T extends Prisma.VerificationFindManyArgs>(
    params: VerificationFindManyProps<T>,
): Promise<VerificationFindManyResponse<T>> => {
    return await VerificationFindManyCached(params);
};

/**
 * ## Verification Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const VerificationCountServer = async <T extends Prisma.VerificationCountArgs>(
    params: VerificationCountProps<T>,
): Promise<VerificationCountResponse<T>> => {
    return await VerificationCountCached(params);
};
