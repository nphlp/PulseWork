import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { ClockCountCached, ClockFindFirstCached, ClockFindManyCached, ClockFindUniqueCached } from "@services/cached";

/**
 * # Clock Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type ClockFindFirstProps<T extends Prisma.ClockFindFirstArgs> = Prisma.SelectSubset<T, Prisma.ClockFindFirstArgs>;
type ClockFindFirstResponse<T extends Prisma.ClockFindFirstArgs> = GetResult<
    Prisma.$ClockPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type ClockFindUniqueProps<T extends Prisma.ClockFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.ClockFindUniqueArgs>;
type ClockFindUniqueResponse<T extends Prisma.ClockFindUniqueArgs> = GetResult<
    Prisma.$ClockPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type ClockFindManyProps<T extends Prisma.ClockFindManyArgs> = Prisma.SelectSubset<T, Prisma.ClockFindManyArgs>;
type ClockFindManyResponse<T extends Prisma.ClockFindManyArgs> = GetResult<
    Prisma.$ClockPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type ClockCountProps<T extends Prisma.ClockCountArgs> = Prisma.SelectSubset<T, Prisma.ClockCountArgs>;
type ClockCountResponse<T extends Prisma.ClockCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.ClockCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Clock Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ClockFindFirstServer = async <T extends Prisma.ClockFindFirstArgs>(
    params: ClockFindFirstProps<T>,
): Promise<ClockFindFirstResponse<T>> => {
    return await ClockFindFirstCached(params);
};

/**
 * ## Clock Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ClockFindUniqueServer = async <T extends Prisma.ClockFindUniqueArgs>(
    params: ClockFindUniqueProps<T>,
): Promise<ClockFindUniqueResponse<T>> => {
    return await ClockFindUniqueCached(params);
};

/**
 * ## Clock Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ClockFindManyServer = async <T extends Prisma.ClockFindManyArgs>(
    params: ClockFindManyProps<T>,
): Promise<ClockFindManyResponse<T>> => {
    return await ClockFindManyCached(params);
};

/**
 * ## Clock Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ClockCountServer = async <T extends Prisma.ClockCountArgs>(
    params: ClockCountProps<T>,
): Promise<ClockCountResponse<T>> => {
    return await ClockCountCached(params);
};
