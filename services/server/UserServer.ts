import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { UserCountCached, UserFindFirstCached, UserFindManyCached, UserFindUniqueCached } from "@services/cached";

/**
 * # User Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type UserFindFirstProps<T extends Prisma.UserFindFirstArgs> = Prisma.SelectSubset<T, Prisma.UserFindFirstArgs>;
type UserFindFirstResponse<T extends Prisma.UserFindFirstArgs> = GetResult<
    Prisma.$UserPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type UserFindUniqueProps<T extends Prisma.UserFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.UserFindUniqueArgs>;
type UserFindUniqueResponse<T extends Prisma.UserFindUniqueArgs> = GetResult<
    Prisma.$UserPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type UserFindManyProps<T extends Prisma.UserFindManyArgs> = Prisma.SelectSubset<T, Prisma.UserFindManyArgs>;
type UserFindManyResponse<T extends Prisma.UserFindManyArgs> = GetResult<
    Prisma.$UserPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type UserCountProps<T extends Prisma.UserCountArgs> = Prisma.SelectSubset<T, Prisma.UserCountArgs>;
type UserCountResponse<T extends Prisma.UserCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.UserCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## User Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const UserFindFirstServer = async <T extends Prisma.UserFindFirstArgs>(
    params: UserFindFirstProps<T>,
): Promise<UserFindFirstResponse<T>> => {
    return await UserFindFirstCached(params);
};

/**
 * ## User Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const UserFindUniqueServer = async <T extends Prisma.UserFindUniqueArgs>(
    params: UserFindUniqueProps<T>,
): Promise<UserFindUniqueResponse<T>> => {
    return await UserFindUniqueCached(params);
};

/**
 * ## User Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const UserFindManyServer = async <T extends Prisma.UserFindManyArgs>(
    params: UserFindManyProps<T>,
): Promise<UserFindManyResponse<T>> => {
    return await UserFindManyCached(params);
};

/**
 * ## User Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const UserCountServer = async <T extends Prisma.UserCountArgs>(
    params: UserCountProps<T>,
): Promise<UserCountResponse<T>> => {
    return await UserCountCached(params);
};
