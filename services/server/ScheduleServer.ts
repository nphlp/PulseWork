import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import {
    ScheduleCountCached,
    ScheduleFindFirstCached,
    ScheduleFindManyCached,
    ScheduleFindUniqueCached,
} from "@services/cached";

/**
 * # Schedule Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type ScheduleFindFirstProps<T extends Prisma.ScheduleFindFirstArgs> = Prisma.SelectSubset<
    T,
    Prisma.ScheduleFindFirstArgs
>;
type ScheduleFindFirstResponse<T extends Prisma.ScheduleFindFirstArgs> = GetResult<
    Prisma.$SchedulePayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type ScheduleFindUniqueProps<T extends Prisma.ScheduleFindUniqueArgs> = Prisma.SelectSubset<
    T,
    Prisma.ScheduleFindUniqueArgs
>;
type ScheduleFindUniqueResponse<T extends Prisma.ScheduleFindUniqueArgs> = GetResult<
    Prisma.$SchedulePayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type ScheduleFindManyProps<T extends Prisma.ScheduleFindManyArgs> = Prisma.SelectSubset<T, Prisma.ScheduleFindManyArgs>;
type ScheduleFindManyResponse<T extends Prisma.ScheduleFindManyArgs> = GetResult<
    Prisma.$SchedulePayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type ScheduleCountProps<T extends Prisma.ScheduleCountArgs> = Prisma.SelectSubset<T, Prisma.ScheduleCountArgs>;
type ScheduleCountResponse<T extends Prisma.ScheduleCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.ScheduleCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Schedule Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ScheduleFindFirstServer = async <T extends Prisma.ScheduleFindFirstArgs>(
    params: ScheduleFindFirstProps<T>,
): Promise<ScheduleFindFirstResponse<T>> => {
    return await ScheduleFindFirstCached(params);
};

/**
 * ## Schedule Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ScheduleFindUniqueServer = async <T extends Prisma.ScheduleFindUniqueArgs>(
    params: ScheduleFindUniqueProps<T>,
): Promise<ScheduleFindUniqueResponse<T>> => {
    return await ScheduleFindUniqueCached(params);
};

/**
 * ## Schedule Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ScheduleFindManyServer = async <T extends Prisma.ScheduleFindManyArgs>(
    params: ScheduleFindManyProps<T>,
): Promise<ScheduleFindManyResponse<T>> => {
    return await ScheduleFindManyCached(params);
};

/**
 * ## Schedule Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ScheduleCountServer = async <T extends Prisma.ScheduleCountArgs>(
    params: ScheduleCountProps<T>,
): Promise<ScheduleCountResponse<T>> => {
    return await ScheduleCountCached(params);
};
