import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { DayCountCached, DayFindFirstCached, DayFindManyCached, DayFindUniqueCached } from "@services/cached";

/**
 * # Day Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type DayFindFirstProps<T extends Prisma.DayFindFirstArgs> = Prisma.SelectSubset<T, Prisma.DayFindFirstArgs>;
type DayFindFirstResponse<T extends Prisma.DayFindFirstArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type DayFindUniqueProps<T extends Prisma.DayFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.DayFindUniqueArgs>;
type DayFindUniqueResponse<T extends Prisma.DayFindUniqueArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type DayFindManyProps<T extends Prisma.DayFindManyArgs> = Prisma.SelectSubset<T, Prisma.DayFindManyArgs>;
type DayFindManyResponse<T extends Prisma.DayFindManyArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type DayCountProps<T extends Prisma.DayCountArgs> = Prisma.SelectSubset<T, Prisma.DayCountArgs>;
type DayCountResponse<T extends Prisma.DayCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.DayCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Day Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const DayFindFirstServer = async <T extends Prisma.DayFindFirstArgs>(
    params: DayFindFirstProps<T>,
): Promise<DayFindFirstResponse<T>> => {
    return await DayFindFirstCached(params);
};

/**
 * ## Day Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const DayFindUniqueServer = async <T extends Prisma.DayFindUniqueArgs>(
    params: DayFindUniqueProps<T>,
): Promise<DayFindUniqueResponse<T>> => {
    return await DayFindUniqueCached(params);
};

/**
 * ## Day Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const DayFindManyServer = async <T extends Prisma.DayFindManyArgs>(
    params: DayFindManyProps<T>,
): Promise<DayFindManyResponse<T>> => {
    return await DayFindManyCached(params);
};

/**
 * ## Day Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const DayCountServer = async <T extends Prisma.DayCountArgs>(
    params: DayCountProps<T>,
): Promise<DayCountResponse<T>> => {
    return await DayCountCached(params);
};
