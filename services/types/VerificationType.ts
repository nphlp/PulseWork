import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";

/**
 * # Verification Type Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/types/{{model}}Type.hbs` as base template
 * - to generate types files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ============== Utils ============== //

type Payload = Prisma.$VerificationPayload<InternalArgs>;

type Flatten<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;

// ============== Model ============== //

/**
 * Verification native fields only
 */
export type VerificationModel = Flatten<Payload["scalars"]>;

/**
 * Verification relations fields only
 */
export type VerificationRelations = {
    [K in keyof Payload["objects"]]: Payload["objects"][K] extends Array<infer T>
        ? T extends { scalars: unknown }
            ? Flatten<T["scalars"]>[]
            : never
        : Payload["objects"][K] extends { scalars: unknown }
          ? Flatten<Payload["objects"][K]["scalars"]>
          : never;
};

/**
 * Verification native and relations fields
 */
export type VerificationComplete = Flatten<VerificationModel & VerificationRelations>;

/**
 * Verification count type
 */
export type VerificationCount = number;

// ========== Types ========== //

/**
 * Verification Create props
 */
export type VerificationCreateProps<T extends Prisma.VerificationCreateArgs = Prisma.VerificationCreateArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationCreateArgs>;

/**
 * Verification Create response
 */
export type VerificationCreateResponse<T extends Prisma.VerificationCreateArgs = Prisma.VerificationCreateArgs> =
    GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "create", PrismaClientOptions>;

/**
 * Verification Upsert props
 */
export type VerificationUpsertProps<T extends Prisma.VerificationUpsertArgs = Prisma.VerificationUpsertArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationUpsertArgs>;

/**
 * Verification Upsert response
 */
export type VerificationUpsertResponse<T extends Prisma.VerificationUpsertArgs = Prisma.VerificationUpsertArgs> =
    GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "upsert", PrismaClientOptions>;

/**
 * Verification Update props
 */
export type VerificationUpdateProps<T extends Prisma.VerificationUpdateArgs = Prisma.VerificationUpdateArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationUpdateArgs>;

/**
 * Verification Update response
 */
export type VerificationUpdateResponse<T extends Prisma.VerificationUpdateArgs = Prisma.VerificationUpdateArgs> =
    GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "update", PrismaClientOptions>;

/**
 * Verification Delete props
 */
export type VerificationDeleteProps<T extends Prisma.VerificationDeleteArgs = Prisma.VerificationDeleteArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationDeleteArgs>;

/**
 * Verification Delete response
 */
export type VerificationDeleteResponse<T extends Prisma.VerificationDeleteArgs = Prisma.VerificationDeleteArgs> =
    GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "delete", PrismaClientOptions>;

/**
 * Verification Create Many props
 */
export type VerificationCreateManyProps<
    T extends Prisma.VerificationCreateManyArgs = Prisma.VerificationCreateManyArgs,
> = Prisma.SelectSubset<T, Prisma.VerificationCreateManyArgs>;

/**
 * Verification Create Many response
 */
export type VerificationCreateManyResponse = Prisma.BatchPayload;

/**
 * Verification Update Many props
 */
export type VerificationUpdateManyProps<
    T extends Prisma.VerificationUpdateManyArgs = Prisma.VerificationUpdateManyArgs,
> = Prisma.SelectSubset<T, Prisma.VerificationUpdateManyArgs>;

/**
 * Verification Update Many response
 */
export type VerificationUpdateManyResponse = Prisma.BatchPayload;

/**
 * Verification Delete Many props
 */
export type VerificationDeleteManyProps<
    T extends Prisma.VerificationDeleteManyArgs = Prisma.VerificationDeleteManyArgs,
> = Prisma.SelectSubset<T, Prisma.VerificationDeleteManyArgs>;

/**
 * Verification Delete Many response
 */
export type VerificationDeleteManyResponse = Prisma.BatchPayload;

/**
 * Verification Find First props
 */
export type VerificationFindFirstProps<T extends Prisma.VerificationFindFirstArgs = Prisma.VerificationFindFirstArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationFindFirstArgs>;

/**
 * Verification Find First response
 */
export type VerificationFindFirstResponse<
    T extends Prisma.VerificationFindFirstArgs = Prisma.VerificationFindFirstArgs,
> = GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "findFirst", PrismaClientOptions>;

/**
 * Verification Find Unique props
 */
export type VerificationFindUniqueProps<
    T extends Prisma.VerificationFindUniqueArgs = Prisma.VerificationFindUniqueArgs,
> = Prisma.SelectSubset<T, Prisma.VerificationFindUniqueArgs>;

/**
 * Verification Find Unique response
 */
export type VerificationFindUniqueResponse<
    T extends Prisma.VerificationFindUniqueArgs = Prisma.VerificationFindUniqueArgs,
> = GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "findUnique", PrismaClientOptions>;

/**
 * Verification Find Many props
 */
export type VerificationFindManyProps<T extends Prisma.VerificationFindManyArgs = Prisma.VerificationFindManyArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationFindManyArgs>;

/**
 * Verification Find Many response
 */
export type VerificationFindManyResponse<T extends Prisma.VerificationFindManyArgs = Prisma.VerificationFindManyArgs> =
    GetResult<Prisma.$VerificationPayload<InternalArgs>, T, "findMany", PrismaClientOptions>;

/**
 * Verification Count props
 */
export type VerificationCountProps<T extends Prisma.VerificationCountArgs = Prisma.VerificationCountArgs> =
    Prisma.SelectSubset<T, Prisma.VerificationCountArgs>;

/**
 * Verification Count response
 */
export type VerificationCountResponse<T extends Prisma.VerificationCountArgs = Prisma.VerificationCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.VerificationCountAggregateOutputType>
        : number;
