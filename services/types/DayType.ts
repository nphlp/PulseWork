import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";

/**
 * # Day Type Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/types/{{model}}Type.hbs` as base template
 * - to generate types files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ============== Utils ============== //

type Payload = Prisma.$DayPayload<InternalArgs>;

type Flatten<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;

// ============== Model ============== //

/**
 * Day native fields only
 */
export type DayModel = Flatten<Payload["scalars"]>;

/**
 * Day relations fields only
 */
export type DayRelations = {
    [K in keyof Payload["objects"]]: Payload["objects"][K] extends Array<infer T>
        ? T extends { scalars: unknown }
            ? Flatten<T["scalars"]>[]
            : never
        : Payload["objects"][K] extends { scalars: unknown }
          ? Flatten<Payload["objects"][K]["scalars"]>
          : never;
};

/**
 * Day native and relations fields
 */
export type DayComplete = Flatten<DayModel & DayRelations>;

/**
 * Day count type
 */
export type DayCount = number;

// ========== Types ========== //

/**
 * Day Create props
 */
export type DayCreateProps<T extends Prisma.DayCreateArgs = Prisma.DayCreateArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayCreateArgs
>;

/**
 * Day Create response
 */
export type DayCreateResponse<T extends Prisma.DayCreateArgs = Prisma.DayCreateArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "create",
    PrismaClientOptions
>;

/**
 * Day Upsert props
 */
export type DayUpsertProps<T extends Prisma.DayUpsertArgs = Prisma.DayUpsertArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayUpsertArgs
>;

/**
 * Day Upsert response
 */
export type DayUpsertResponse<T extends Prisma.DayUpsertArgs = Prisma.DayUpsertArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "upsert",
    PrismaClientOptions
>;

/**
 * Day Update props
 */
export type DayUpdateProps<T extends Prisma.DayUpdateArgs = Prisma.DayUpdateArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayUpdateArgs
>;

/**
 * Day Update response
 */
export type DayUpdateResponse<T extends Prisma.DayUpdateArgs = Prisma.DayUpdateArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "update",
    PrismaClientOptions
>;

/**
 * Day Delete props
 */
export type DayDeleteProps<T extends Prisma.DayDeleteArgs = Prisma.DayDeleteArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayDeleteArgs
>;

/**
 * Day Delete response
 */
export type DayDeleteResponse<T extends Prisma.DayDeleteArgs = Prisma.DayDeleteArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "delete",
    PrismaClientOptions
>;

/**
 * Day Create Many props
 */
export type DayCreateManyProps<T extends Prisma.DayCreateManyArgs = Prisma.DayCreateManyArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayCreateManyArgs
>;

/**
 * Day Create Many response
 */
export type DayCreateManyResponse = Prisma.BatchPayload;

/**
 * Day Update Many props
 */
export type DayUpdateManyProps<T extends Prisma.DayUpdateManyArgs = Prisma.DayUpdateManyArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayUpdateManyArgs
>;

/**
 * Day Update Many response
 */
export type DayUpdateManyResponse = Prisma.BatchPayload;

/**
 * Day Delete Many props
 */
export type DayDeleteManyProps<T extends Prisma.DayDeleteManyArgs = Prisma.DayDeleteManyArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayDeleteManyArgs
>;

/**
 * Day Delete Many response
 */
export type DayDeleteManyResponse = Prisma.BatchPayload;

/**
 * Day Find First props
 */
export type DayFindFirstProps<T extends Prisma.DayFindFirstArgs = Prisma.DayFindFirstArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayFindFirstArgs
>;

/**
 * Day Find First response
 */
export type DayFindFirstResponse<T extends Prisma.DayFindFirstArgs = Prisma.DayFindFirstArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

/**
 * Day Find Unique props
 */
export type DayFindUniqueProps<T extends Prisma.DayFindUniqueArgs = Prisma.DayFindUniqueArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayFindUniqueArgs
>;

/**
 * Day Find Unique response
 */
export type DayFindUniqueResponse<T extends Prisma.DayFindUniqueArgs = Prisma.DayFindUniqueArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

/**
 * Day Find Many props
 */
export type DayFindManyProps<T extends Prisma.DayFindManyArgs = Prisma.DayFindManyArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayFindManyArgs
>;

/**
 * Day Find Many response
 */
export type DayFindManyResponse<T extends Prisma.DayFindManyArgs = Prisma.DayFindManyArgs> = GetResult<
    Prisma.$DayPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

/**
 * Day Count props
 */
export type DayCountProps<T extends Prisma.DayCountArgs = Prisma.DayCountArgs> = Prisma.SelectSubset<
    T,
    Prisma.DayCountArgs
>;

/**
 * Day Count response
 */
export type DayCountResponse<T extends Prisma.DayCountArgs = Prisma.DayCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.DayCountAggregateOutputType>
        : number;
